<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby -wKU

SUPPORT = ENV['TM_SUPPORT_PATH']
DIALOG = SUPPORT + '/bin/tm_dialog'

require SUPPORT + '/lib/escape'
require SUPPORT + '/lib/exit_codes'
require SUPPORT + '/lib/osx/plist'

#Search for
word = STDIN.read.strip
TextMate.exit_show_tool_tip("Please select a term to complete.") if word.empty?

#word = "mx:"+word if word !~ /mx/

words = `grep -i "#{word}" "$TM_BUNDLE_PATH/support/data/mx_completions.txt"`.split("\n")
TextMate.exit_show_tool_tip "No completion available" if words.empty?

if words.size &gt; 1
    
	words = words.collect { |e| 
	    mxmlTag = /\:(\w+)?/.match(e)
		suffix = " "
		tag = e
		if mxmlTag[3] != nil
			suffix += mxmlTag[3]
			tag = e.sub(mxmlTag[3],'')
		end
	    { 'title' =&gt; mxmlTag[1] + suffix, 'data' =&gt; tag } 
	}
	plist = { 'menuItems' =&gt; words }.to_plist
	
	res = OSX::PropertyList::load(`#{e_sh DIALOG} -up #{e_sh plist}`)

	TextMate.exit_discard() unless res.has_key? 'selectedMenuItem'
	choice = res['selectedMenuItem']['data']

else

	choice = words.pop

end

print choice

</string>
	<key>fallbackInput</key>
	<string>word</string>
	<key>input</key>
	<string>selection</string>
	<key>name</key>
	<string>Auto Complete MX Component</string>
	<key>output</key>
	<string>insertAsSnippet</string>
	<key>scope</key>
	<string>text.xml.mxml</string>
	<key>uuid</key>
	<string>44EE8C38-BC20-41A2-86D2-82EF987B3010</string>
</dict>
</plist>
